import{l as o,g as h,h as m,d as g,u as f,a as n,p as d,A as E,c as p}from"./scheduleTriggerService.a6266f58.js";const u={getSubstackCookies:async()=>new Promise((e,s)=>{chrome.cookies.getAll({domain:"substack.com"},t=>{if(chrome.runtime.lastError){n("Error fetching cookies:",chrome.runtime.lastError),s(chrome.runtime.lastError.message);return}if(!t||t.length===0){console.warn("No Substack cookies found."),e({message:"No Substack cookies found.",action:"SUBSTACK_COOKIES_FETCHED",result:""});return}const r=["substack.sid","__cf_bm","substack.lli"];o("Cookies:",t);const c=t.filter(i=>r.includes(i.name));if(c.length===0){console.warn("No relevant Substack auth cookies found."),e({message:"No relevant Substack auth cookies found.",action:"SUBSTACK_COOKIES_FETCHED",result:""});return}const a=c.map(i=>({name:i.name,value:i.value,expiresAt:i.expirationDate||null,domain:i.domain,path:i.path,secure:i.secure,httpOnly:i.httpOnly,sameSite:i.sameSite||"unspecified"})),l=JSON.stringify(a);e({message:"Cookies fetched successfully",action:"SUBSTACK_COOKIES_FETCHED",result:l})})}),createSubstackPost:async e=>{try{let s=[];if(!e)return{success:!1,message:"No note provided",action:"SUBSTACK_POST_CREATE",result:JSON.stringify({error:"No note provided"})};(e==null?void 0:e.attachmentUrls)&&e.attachmentUrls.length>0&&(s=await d(e.attachmentUrls));const t=s.length>0?JSON.stringify({bodyJson:e==null?void 0:e.bodyJson,attachmentIds:s.map(l=>l.id)}):JSON.stringify({bodyJson:e==null?void 0:e.bodyJson});console.log("Body:",t);const r=await fetch("https://substack.com/api/v1/comment/feed",{headers:{"content-type":"application/json",Referer:"https://substack.com/home",Origin:"https://substack.com"},credentials:"include",body:t,method:"POST"}),c=await r.text(),a=JSON.parse(c);return r.ok?(o("Response:",r),o("Data after post sent:",a),{message:"Post created successfully",action:"SUBSTACK_POST_CREATED",result:JSON.stringify(a)}):(o("Response of Send note:",r),o("Data of Send note:",a),o("Text of Send note:",c),{success:!1,message:"Failed to create post",action:"SUBSTACK_POST_CREATES",result:JSON.stringify({error:"Failed to create post"})})}catch(s){const t=s instanceof Error?s.message:String(s);throw o("Error creating Substack post",{error:t}),n("Error creating Substack post:",s),s}},setSubstackCookies:async()=>{const e=await u.getSubstackCookies(),s=JSON.parse(e.result);o("Sending to server:",JSON.stringify(s));try{const t=await fetch(`${E}/api/user/cookies`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)});if(!t.ok)return n("Failed to send cookies to server"),e;const r=await t.json();return o("Cookies sent to server successfully",r),e}catch(t){return n("Error sending cookies to server:",t),e}},createSchedule:async e=>{try{const{scheduleId:s,userId:t,timestamp:r,noteId:c}=e;o("Creating schedule",{scheduleId:s,userId:t,timestamp:r});const a=await p({scheduleId:s,userId:t,timestamp:r,noteId:c});return o("Schedule created successfully",a),{message:"Schedule created successfully",action:"SCHEDULE_CREATED",result:e}}catch(s){const t=s instanceof Error?s.message:String(s);throw n("Error creating schedule:",t),s}},deleteSchedule:async e=>{try{const s=await g(e);return{message:s?"Schedule deleted successfully":"Schedule not found",action:"SCHEDULE_DELETED",result:s}}catch(s){const t=s instanceof Error?s.message:String(s);throw n("Error deleting schedule:",t),s}},getSchedules:async()=>{try{const{schedules:e,alarms:s}=await h();return{message:`Found ${e.length} schedules`,action:"SCHEDULES_FETCHED",result:{schedules:e,alarms:s}}}catch(e){const s=e instanceof Error?e.message:String(e);throw n("Error getting schedules:",s),e}},uploadImagesToSubstack:async e=>{if(o("Uploading images to Substack:",e),!e||!e.length)return{message:"No images to upload",action:"IMAGES_UPLOADED",result:[]};const s=[];try{o("Preparing attachments for note",e);const t=await d(e),r=new Map;t.forEach(c=>{r.set(c.url,c)});for(const c of e){const a=r.get(c);a?s.push({url:c,success:!0,attachmentId:a.id}):s.push({url:c,success:!1})}return{message:`Successfully uploaded ${t.length} of ${e.length} images`,action:"IMAGES_UPLOADED",result:s}}catch(t){const r=t instanceof Error?t.message:String(t);n("Error uploading images to Substack:",r);const c=new Set(s.map(a=>a.url));for(const a of e)c.has(a)||s.push({url:a,success:!1});return{message:`Error uploading images: ${r}`,action:"IMAGES_UPLOADED",result:s}}}};function S(e,s=[]){switch(e){case"getSubstackCookies":return u.getSubstackCookies();case"setSubstackCookies":return u.setSubstackCookies();case"createSubstackPost":return u.createSubstackPost(s[0]);case"createSchedule":return u.createSchedule({scheduleId:s[0],userId:s[1],timestamp:s[2],noteId:s[3]});case"deleteSchedule":return u.deleteSchedule(s[0]);case"getSchedules":return u.getSchedules();case"uploadImagesToSubstack":return u.uploadImagesToSubstack(s[0]);default:return Promise.reject(new Error(`Unknown action: ${e}`))}}chrome.alarms.onAlarm.addListener(async e=>{o(`Alarm triggered: ${e.name}`);const{schedules:s}=await h(),t=s.find(r=>r.scheduleId===e.name);if(t){o(`Processing schedule: ${t.scheduleId}`);try{const r=await m(t);if(o(`Schedule ${t.scheduleId} processed:`,r),r.status==="sent")await g(t.scheduleId);else{if(r.status==="processing")return;await f(t.scheduleId,r.status,r.error)}}catch(r){n(`Error handling schedule ${t.scheduleId}:`,r)}}});chrome.runtime.onMessageExternal.addListener((e,s,t)=>{if(o("Background script received external message:",{request:e,sender:s==null?void 0:s.url,type:e==null?void 0:e.type}),(e==null?void 0:e.type)==="PING"){o("Received external PING, responding immediately");const r=chrome.runtime.getManifest().version;return o("Version:",r),t({success:!0,timestamp:Date.now(),version:r,message:"Extension is active",source:"external"}),!1}if((e==null?void 0:e.type)==="API_REQUEST"){const{action:r,params:c}=e;if(o("Received API request:",{action:r,params:c}),r)return S(r,c).then(a=>{a.success!==!1?t({success:!0,data:a}):(n(`Error in API request (${r}):`,a),t({success:!1,error:a.error}))}).catch(a=>{n(`Error in API request (${r}):`,a),t({success:!1,error:a.message})}),!0}return!1});chrome.runtime.onMessage.addListener((e,s,t)=>{if(o(`Background got internal from ${s.url} message: ${JSON.stringify(e)}`),(e==null?void 0:e.type)==="PING")return t({success:!0,timestamp:Date.now(),message:"Extension is active",source:"internal"}),!1;if((e==null?void 0:e.type)==="API_REQUEST"){const{action:r,params:c}=e;if(o("API request:",{action:r,params:c}),r)return S(r,c).then(a=>{t({success:!0,data:a})}).catch(a=>{n(`Error in API request (${r}):`,a),t({success:!1,error:a.message})}),!0}return!1});
//# sourceMappingURL=background.js.map
