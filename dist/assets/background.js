const i="http://localhost:3000";function u(t,e){const r=new Date().toISOString();console.log(`[SCHEDULED POST ${r}] ${t}`,e||"")}async function o(t,e={}){const r=await fetch(`${i}${t}`,{...e,credentials:"include",headers:{"Content-Type":"application/json",...e.headers}});return r.ok?r.json():null}const s={updateIdeaStatus:async(t,e)=>{const r=e==="favorite"?"isFavorite=true":`status=${e}`;return o(`/api/idea/${t}/status?${r}`,{method:"PATCH"})},updateIdeaContent:async(t,e,r,n)=>o(`/api/idea/${t}`,{method:"PATCH",body:JSON.stringify({body:e,title:r,subtitle:n})}),generateIdeas:async(t="",e=3,r=!1)=>o(`/api/post/generate/ideas?topic=${t}&ideasCount=${e}&shouldSearch=${r}`),improveText:async(t,e,r)=>o("/api/post/improve",{method:"POST",body:JSON.stringify({text:t,type:e,ideaId:r})}),improveTitle:async(t,e,r,n)=>o("/api/post/improve/title",{method:"POST",body:JSON.stringify({menuType:t,improveType:e,ideaId:r,value:n})}),createNewIdea:async()=>o("/api/idea",{method:"POST"}),generateIdeasTest:async()=>o("/api/post/generate/ideas-test"),createSubstackPost:async t=>{try{const e=typeof t=="string"?t:JSON.stringify(t),n=await(await fetch("https://substack.com/api/v1/comment/feed",{headers:{"content-type":"application/json",Referer:"https://substack.com/home","Referrer-Policy":"strict-origin-when-cross-origin"},body:e,method:"POST"})).json();return{message:"Post created successfully",action:"SUBSTACK_POST_CREATED",result:JSON.stringify(n)}}catch(e){const r=e instanceof Error?e.message:String(e);throw u("Error creating Substack post",{error:r}),console.error("Error creating Substack post:",e),e}}};function d(t,e=[]){switch(t){case"updateIdeaStatus":return s.updateIdeaStatus(e[0],e[1]);case"updateIdeaContent":return s.updateIdeaContent(e[0],e[1],e[2],e[3]);case"generateIdeas":return s.generateIdeas(e[0],e[1],e[2]);case"improveText":return s.improveText(e[0],e[1],e[2]);case"improveTitle":return s.improveTitle(e[0],e[1],e[2],e[3]);case"createNewIdea":return s.createNewIdea();case"generateIdeasTest":return s.generateIdeasTest();case"createSubstackPost":return s.createSubstackPost(e[0],e[1],e[2]);default:return Promise.reject(new Error(`Unknown action: ${t}`))}}chrome.runtime.onMessageExternal.addListener((t,e,r)=>{if(console.log("Background script received external message:",t,"from:",e.url,"Type: ",t.type),t.type==="PING")return console.log("Received external PING, responding immediately"),r({success:!0,timestamp:Date.now(),message:"Extension is active",source:"external"}),!1;if(t.type==="API_REQUEST"){const{action:n,params:c}=t;if(console.log("Received API request:",n,c),n)return d(n,c).then(a=>{r({success:!0,data:a})}).catch(a=>{console.error(`Error in API request (${n}):`,a),r({success:!1,error:a.message})}),!0}return!1});
//# sourceMappingURL=background.js.map
