const o="http://localhost:3000";async function s(t,e={}){const r=await fetch(`${o}${t}`,{...e,credentials:"include",headers:{"Content-Type":"application/json",...e.headers}});return r.ok?r.json():null}const a={updateIdeaStatus:async(t,e)=>{const r=e==="favorite"?"isFavorite=true":`status=${e}`;return s(`/api/idea/${t}/status?${r}`,{method:"PATCH"})},updateIdeaContent:async(t,e,r,n)=>s(`/api/idea/${t}`,{method:"PATCH",body:JSON.stringify({body:e,title:r,subtitle:n})}),generateIdeas:async(t="",e=3,r=!1)=>s(`/api/post/generate/ideas?topic=${t}&ideasCount=${e}&shouldSearch=${r}`),improveText:async(t,e,r)=>s("/api/post/improve",{method:"POST",body:JSON.stringify({text:t,type:e,ideaId:r})}),improveTitle:async(t,e,r,n)=>s("/api/post/improve/title",{method:"POST",body:JSON.stringify({menuType:t,improveType:e,ideaId:r,value:n})}),createNewIdea:async()=>s("/api/idea",{method:"POST"}),generateIdeasTest:async()=>s("/api/post/generate/ideas-test")};function d(t,e=[]){switch(t){case"updateIdeaStatus":return a.updateIdeaStatus(e[0],e[1]);case"updateIdeaContent":return a.updateIdeaContent(e[0],e[1],e[2],e[3]);case"generateIdeas":return a.generateIdeas(e[0],e[1],e[2]);case"improveText":return a.improveText(e[0],e[1],e[2]);case"improveTitle":return a.improveTitle(e[0],e[1],e[2],e[3]);case"createNewIdea":return a.createNewIdea();case"generateIdeasTest":return a.generateIdeasTest();default:return Promise.reject(new Error(`Unknown action: ${t}`))}}chrome.runtime.onMessage.addListener((t,e,r)=>{if(console.log("Background script received message:",t),t.type==="API_REQUEST"){const{action:n,params:c}=t;if(n)return d(n,c).then(i=>{r({success:!0,data:i})}).catch(i=>{console.error(`Error in API request (${n}):`,i),r({success:!1,error:i.message})}),!0}if(t.type==="GENERATE_IDEAS")return a.generateIdeasTest().then(n=>{r({success:!0,data:n})}).catch(n=>{console.error("Error generating ideas:",n),r({success:!1,error:n.message})}),!0});
//# sourceMappingURL=background.js.map
